Original f: A !(G F Fire(p) & F (Fire(q) & G !Fire(r)))
Negated f: A (G F Fire(p) & F (Fire(q) & G !Fire(r)))
Simplified f: (False R True U Fire(p) & True U (Fire(q) & False R !Fire(r)))
subs: {!Fire(r), False, Fire(p), (False R True U Fire(p) & True U (Fire(q) & False R !Fire(r))), True U Fire(p), True, False R True U Fire(p), (Fire(q) & False R !Fire(r)), Fire(q), False R !Fire(r), True U (Fire(q) & False R !Fire(r))}
states: {True U (Fire(q) & False R !Fire(r)), False R !Fire(r), True U Fire(p), False R True U Fire(p)}
alphabet: [{}]
initial state: FormulaSet { set: {(False R True U Fire(p) & True U (Fire(q) & False R !Fire(r)))} }
final state: FormulaSet { set: {True U Fire(p), True U (Fire(q) & False R !Fire(r))} }
finals vec: [True U Fire(p), True U (Fire(q) & False R !Fire(r))]
init set: FormulaSet { set: {True U (Fire(q) & False R !Fire(r)), False R True U Fire(p)} }
Handling bstate: FormulaSet { set: {False R True U Fire(p), False R !Fire(r)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
find new state: (FormulaSet { set: {False R True U Fire(p), False R !Fire(r), True U Fire(p)} }, 0)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} } 2
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p)} }, 2)
find existing state: (FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} }, 2)
Handling bstate: FormulaSet { set: {False R !Fire(r), False R True U Fire(p), True U Fire(p)} } 2
